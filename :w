use core::time;
use enigo::*;
use rand::{self, Rng};
use std::{
    fs::{self, File},
    thread::sleep,
};

mod keys {
    fn write_quest() {}
}

fn main() {
    let text = get_file_input(&"test.txt".to_string());

    typer(text);
}

fn get_file_input(file_path: &String) -> String {
    if File::open(&file_path).is_err() {
        let _ = File::create(file_path).unwrap();
    }

    let text = fs::read_to_string(file_path).unwrap();

    text
}

fn simulate_keypress(key: char) {
    let mut eng = Enigo::new();

    match key {
        '?' => eng.key_click(enigo::Key::Layout('?')),
        '"' => eng.key_click(enigo::Key::Layout('"')),
        '.' => eng.key_click(enigo::Key::Layout('.')),
        ',' => eng.key_click(enigo::Key::Layout(',')),
        ' ' => eng.key_click(enigo::Key::Space),
        _ => eng.key_click(Key::Layout(key)),
    }
}

fn typer(text: String) {
    let keys = text.as_bytes();
    let mut rng = rand::thread_rng();

    for key in keys {
        sleep(time::Duration::from_millis(rng.gen_range(10..=100)));
        simulate_keypress(*key as char)
    }
}
